name: prod-linkgem-git-action


on:
  push:
    branches: [master]

env:
  S3_BUCKET_NAME: linkgem-deploy

jobs:
 BuildAndDeploy:
  runs-on: ubuntu-latest
  steps:
    # 소스코드 체크아웃
    - name: Checkout Source Code
      uses: actions/checkout@v3
      
    # JDK 17 세팅
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    
    # AWS 접근 세팅
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      
      with:
        node-version: '16'
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        
    # S3 버킷에 YML 파일 복사
    - name: S3 properties files copy
      run: |
        aws s3 cp s3://linkgem-properties/backend/application.yml ./src/main/resources/application.yml
        aws s3 cp s3://linkgem-properties/backend/application-dev.yml ./src/main/resources/application-dev.yml
        aws s3 cp s3://linkgem-properties/backend/application-oauth.yml ./src/main/resources/application-oauth.yml
    
    # gradlew 권한 추가
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew
      shell: bash
    
    # Test없이 jar 파일 build
    - name: Build with Gradle
      run: ./gradlew clean build -x test
      shell: bash
    
    # zip 파일 생성
    - name: Make zip file
      run: zip -r ./$GITHUB_SHA.zip .
      shell: bash
      
    # S3에 압축파일 업로드
    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip
    
    # CODE DEPLOY를 사용하여 배포
    - name: Code Deploy
      run: aws deploy create-deployment --application-name Github-Actions-Deploy --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name dev-github-actions-group --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$GITHUB_SHA.zip
      
        
    
  
 
  
  
